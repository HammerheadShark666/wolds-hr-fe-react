# TODO: Do job feature
# TODO: Do employment feature  
# TODO: Do Employee import
# TODO: Do in side bar add logged in user details
# TODO: Error handling
# TODO: client/server
# TODO: Add employee photo
# TODO: fonts


# TODO: date validation

# TODO: Why HttpOnly Cookies?

# TODO: delete from import list and remove from import list
 
#radix-ui
 
### Core React
 JSX
 Functional Components
 Props
 useState (component state)
 Event handling (onClick, onChange)
 Conditional rendering (if, ?, &&)
 List rendering with .map() and keys

### React Hooks
 useEffect for side effects & data fetching
 useRef for DOM refs or persistent values
 useContext for shared state
 useReducer for complex state logic

### Routing
 react-router-dom for navigation
 Route parameters & nested routes

### Forms
 Controlled inputs
 React Hook Form + Zod/Yup for validation

### State Management
 Redux Toolkit
 createSlice, createAsyncThunk
 useSelector, useDispatch with types

### API Integration
 Axios or Fetch
 Error handling
 Loading states
 Caching with React Query (TanStack)

### Styling
 CSS Modules or Tailwind
 Styled Components or Emotion

### Testing (optional)
 React Testing Library
 Jest

### TypeScript in React

### Basics
 Typing props (type Props = { ... })
 Typing state (useState<Type>(...))
 Typing events (React.ChangeEvent<HTMLInputElement>)
 Typing refs (useRef<HTMLInputElement>(null))

### Advanced
 Typing API data (type Employee = { ... })
 Custom hooks with typed return
 Inferred types from Zod schema (z.infer<typeof schema>)
 Redux types: RootState, AppDispatch
 Utility types: Partial, Pick, Omit, Record
 Discriminated unions & enums
 Generic components and hooks

### Config
 Set jsx: "react-jsx" in tsconfig.json
 Enable strict mode


###

azurite --silent --location c:\azurite --debug c:\azurite\debug.log


###  "email": "Test100@hotmail.com",
###  "password": "Password#1"